# Generated by Django 5.0.6 on 2025-09-11 11:42

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('resourceID', models.AutoField(db_column='resourceID', primary_key=True, serialize=False)),
                ('name', models.CharField(default='Default Resource', max_length=50, unique=True)),
                ('resource_type', models.CharField(choices=[('HARDWARE', 'Hardware Node'), ('SOFTWARE', 'Software Service'), ('PREDICTION', 'Prediction Service'), ('ANALYTICS', 'Analytics Service')], default='HARDWARE', max_length=20)),
                ('category', models.CharField(choices=[('FEEDING', 'Feeding Node'), ('THERMAL', 'Thermal Node'), ('WATERING', 'Watering Node'), ('WEIGHTING', 'Weighting Node'), ('DUSTING', 'Dusting Node'), ('PREDICTION', 'Prediction Service'), ('ANALYTICS', 'Analytics Service'), ('INVENTORY', 'Inventory Management')], default='INVENTORY', max_length=20)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('status', models.BooleanField(default=True)),
                ('is_basic', models.BooleanField(default=False, help_text='If True, this resource is available to all farmers regardless of subscription')),
                ('description', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['resource_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('subscriptionTypeID', models.AutoField(db_column='subscriptionTypeID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('tier', models.CharField(choices=[('INDIVIDUAL', 'Individual/Small'), ('NORMAL', 'Normal/Medium'), ('PREMIUM', 'Premium/Large')], default='INDIVIDUAL', max_length=20)),
                ('farm_size', models.CharField(default='Small', max_length=20)),
                ('cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('max_hardware_nodes', models.PositiveIntegerField(default=1)),
                ('max_software_services', models.PositiveIntegerField(default=1)),
                ('includes_predictions', models.BooleanField(default=False)),
                ('includes_analytics', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='FarmerSubscription',
            fields=[
                ('farmerSubscriptionID', models.AutoField(db_column='farmerSubscriptionID', primary_key=True, serialize=False)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PENDING', 'Pending Payment'), ('SUSPENDED', 'Suspended'), ('CANCELLED', 'Cancelled'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('auto_renew', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('farmerID', models.ForeignKey(blank=True, db_column='farmerID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='accounts.farmer')),
                ('subscription_typeID', models.ForeignKey(blank=True, db_column='subscription_typeID', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='farmer_subscriptions', to='subscriptions.subscriptiontype')),
            ],
            options={
                'verbose_name': 'Farmer Subscription',
                'verbose_name_plural': 'Farmer Subscriptions',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('paymentID', models.AutoField(db_column='paymentID', primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('receipt', models.FileField(blank=True, null=True, upload_to='payments/receipts/')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('farmerSubscriptionID', models.ForeignKey(blank=True, db_column='farmerSubscriptionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='subscriptions.farmersubscription')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='FarmerSubscriptionResource',
            fields=[
                ('farmerSubscriptionResourceID', models.AutoField(db_column='farmerSubscriptionResourceID', primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('status', models.BooleanField(default=True)),
                ('allocated_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('farmerSubscriptionID', models.ForeignKey(blank=True, db_column='farmerSubscriptionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='subscriptions.farmersubscription')),
                ('resourceID', models.ForeignKey(blank=True, db_column='resourceID', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='allocations', to='subscriptions.resource')),
            ],
            options={
                'verbose_name': 'Subscription Resource',
                'verbose_name_plural': 'Subscription Resources',
                'indexes': [models.Index(fields=['farmerSubscriptionID', 'resourceID'], name='subscriptio_farmerS_8fdbfb_idx')],
                'unique_together': {('farmerSubscriptionID', 'resourceID')},
            },
        ),
    ]
