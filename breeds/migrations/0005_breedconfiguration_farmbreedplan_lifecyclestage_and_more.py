# Generated by Django 5.0.6 on 2025-09-16 11:33

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
        ('batches', '0002_alter_batch_options'),
        ('breeds', '0004_alter_breedcondition_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BreedConfiguration',
            fields=[
                ('configuration_id', models.AutoField(primary_key=True, serialize=False)),
                ('purpose', models.CharField(choices=[('EGGS', 'Egg Production'), ('MEAT', 'Meat Production'), ('DUAL', 'Dual Purpose')], default='EGGS', max_length=10)),
                ('brooding_end_week', models.IntegerField(default=6, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('growing_end_week', models.IntegerField(default=16, validators=[django.core.validators.MinValueValidator(7), django.core.validators.MaxValueValidator(24)])),
                ('laying_start_week', models.IntegerField(default=17, validators=[django.core.validators.MinValueValidator(16), django.core.validators.MaxValueValidator(30)])),
                ('slaughter_week', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(6), django.core.validators.MaxValueValidator(20)])),
                ('expected_laying_rate', models.DecimalField(decimal_places=2, default=Decimal('80.00'), help_text='Expected laying rate percentage', max_digits=5)),
                ('target_weight_at_slaughter', models.DecimalField(blank=True, decimal_places=2, help_text='Target weight in grams', max_digits=6, null=True)),
                ('optimal_temperature_min', models.DecimalField(decimal_places=1, default=Decimal('18.0'), max_digits=4)),
                ('optimal_temperature_max', models.DecimalField(decimal_places=1, default=Decimal('25.0'), max_digits=4)),
                ('optimal_humidity_min', models.DecimalField(decimal_places=1, default=Decimal('50.0'), max_digits=4)),
                ('optimal_humidity_max', models.DecimalField(decimal_places=1, default=Decimal('70.0'), max_digits=4)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('breed', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lifecycle_config', to='breeds.breed')),
            ],
            options={
                'verbose_name': 'Breed Configuration',
                'verbose_name_plural': 'Breed Configurations',
                'db_table': 'breed_configuration_tb',
            },
        ),
        migrations.CreateModel(
            name='FarmBreedPlan',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('planned_end_date', models.DateField()),
                ('initial_bird_count', models.IntegerField()),
                ('current_bird_count', models.IntegerField()),
                ('current_age_weeks', models.DecimalField(decimal_places=1, max_digits=4)),
                ('current_stage', models.CharField(choices=[('BROODING', 'Brooding (0-6 weeks)'), ('GROWING', 'Growing (7-16 weeks)'), ('LAYING', 'Laying (17+ weeks)'), ('FINISHING', 'Finishing (6-8 weeks for meat)')], max_length=20)),
                ('actual_feed_consumption', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('mortality_count', models.IntegerField(default=0)),
                ('health_issues_count', models.IntegerField(default=0)),
                ('total_eggs_collected', models.IntegerField(default=0)),
                ('current_laying_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('TERMINATED', 'Terminated')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breed_plan', to='batches.batch')),
                ('breed_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farm_plans', to='breeds.breedconfiguration')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breed_plans', to='accounts.farmer')),
            ],
            options={
                'verbose_name': 'Farm Breed Plan',
                'verbose_name_plural': 'Farm Breed Plans',
                'db_table': 'farm_breed_plan_tb',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LifecycleStage',
            fields=[
                ('stage_id', models.AutoField(primary_key=True, serialize=False)),
                ('stage_name', models.CharField(choices=[('BROODING', 'Brooding (0-6 weeks)'), ('GROWING', 'Growing (7-16 weeks)'), ('LAYING', 'Laying (17+ weeks)'), ('FINISHING', 'Finishing (6-8 weeks for meat)')], max_length=20)),
                ('start_week', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('end_week', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('daily_feed_per_bird', models.DecimalField(decimal_places=2, help_text='Grams per bird per day', max_digits=6)),
                ('feeding_frequency', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('water_requirement', models.DecimalField(decimal_places=2, help_text='ML per bird per day', max_digits=6)),
                ('temperature_min', models.DecimalField(decimal_places=1, max_digits=4)),
                ('temperature_max', models.DecimalField(decimal_places=1, max_digits=4)),
                ('humidity_min', models.DecimalField(decimal_places=1, default=Decimal('50.0'), max_digits=4)),
                ('humidity_max', models.DecimalField(decimal_places=1, default=Decimal('70.0'), max_digits=4)),
                ('floor_space_per_bird', models.DecimalField(decimal_places=2, help_text='Square feet per bird', max_digits=6)),
                ('critical_monitoring_points', models.TextField(help_text='JSON array of monitoring points')),
                ('common_health_issues', models.TextField(help_text='JSON array of common health issues')),
                ('breed_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='breeds.breedconfiguration')),
            ],
            options={
                'verbose_name': 'Lifecycle Stage',
                'verbose_name_plural': 'Lifecycle Stages',
                'db_table': 'lifecycle_stage_tb',
                'ordering': ['breed_config', 'start_week'],
                'unique_together': {('breed_config', 'stage_name')},
            },
        ),
        migrations.CreateModel(
            name='BreedGuideline',
            fields=[
                ('guideline_id', models.AutoField(primary_key=True, serialize=False)),
                ('guideline_type', models.CharField(choices=[('FEEDING', 'Feeding Guidelines'), ('HEALTH', 'Health Management'), ('ENVIRONMENT', 'Environmental Control'), ('BREEDING', 'Breeding Management'), ('PRODUCTION', 'Production Optimization'), ('GENERAL', 'General Care')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('applicable_from_week', models.IntegerField(default=0)),
                ('applicable_to_week', models.IntegerField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('HIGH', 'High Priority'), ('MEDIUM', 'Medium Priority'), ('LOW', 'Low Priority')], default='MEDIUM', max_length=10)),
                ('is_critical', models.BooleanField(default=False, help_text='Critical for bird health/production')),
                ('is_automated', models.BooleanField(default=False, help_text='Can be automated by system')),
                ('implementation_steps', models.TextField(help_text='JSON array of implementation steps')),
                ('required_resources', models.TextField(help_text='JSON array of required resources')),
                ('success_indicators', models.TextField(help_text='JSON array of success indicators')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('breed_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guidelines', to='breeds.breedconfiguration')),
                ('stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guidelines', to='breeds.lifecyclestage')),
            ],
            options={
                'verbose_name': 'Breed Guideline',
                'verbose_name_plural': 'Breed Guidelines',
                'db_table': 'breed_guideline_tb',
                'ordering': ['breed_config', 'applicable_from_week', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='GuidelineCompletion',
            fields=[
                ('completion_id', models.AutoField(primary_key=True, serialize=False)),
                ('completed_at', models.DateTimeField()),
                ('completion_notes', models.TextField(blank=True)),
                ('success_rating', models.IntegerField(help_text='1-5 rating of implementation success', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('measured_results', models.TextField(blank=True, help_text='JSON of measured outcomes')),
                ('farmer_feedback', models.TextField(blank=True)),
                ('farm_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completions', to='breeds.farmbreedplan')),
                ('guideline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completions', to='breeds.breedguideline')),
            ],
            options={
                'verbose_name': 'Guideline Completion',
                'verbose_name_plural': 'Guideline Completions',
                'db_table': 'guideline_completion_tb',
                'unique_together': {('farm_plan', 'guideline')},
            },
        ),
    ]
