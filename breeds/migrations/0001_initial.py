# Generated by Django 5.0.6 on 2025-09-11 11:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('activityTypeID', models.AutoField(primary_key=True, serialize=False)),
                ('activityType', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Activity Type',
                'verbose_name_plural': 'Activity Types',
            },
        ),
        migrations.CreateModel(
            name='BreedType',
            fields=[
                ('breed_typeID', models.AutoField(primary_key=True, serialize=False)),
                ('breedType', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Breed Type',
                'verbose_name_plural': 'Breed Types',
            },
        ),
        migrations.CreateModel(
            name='ConditionType',
            fields=[
                ('condition_typeID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('unit', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Condition Type',
                'verbose_name_plural': 'Condition Types',
            },
        ),
        migrations.CreateModel(
            name='FeedingType',
            fields=[
                ('feedingTypeID', models.AutoField(primary_key=True, serialize=False)),
                ('feedingName', models.CharField(max_length=50, unique=True)),
                ('quanitityType', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Feeding Type',
                'verbose_name_plural': 'Feeding Types',
            },
        ),
        migrations.CreateModel(
            name='FoodType',
            fields=[
                ('foodTypeID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Food Type',
                'verbose_name_plural': 'Food Types',
            },
        ),
        migrations.CreateModel(
            name='Breed',
            fields=[
                ('breedID', models.AutoField(primary_key=True, serialize=False)),
                ('breedName', models.CharField(max_length=50, unique=True)),
                ('preedphoto', models.CharField(default='preedphoto.png', max_length=50)),
                ('breed_typeID', models.ForeignKey(db_column='breed_typeID', on_delete=django.db.models.deletion.CASCADE, related_name='breeds', to='breeds.breedtype')),
            ],
            options={
                'verbose_name': 'Breed',
                'verbose_name_plural': 'Breeds',
            },
        ),
        migrations.CreateModel(
            name='BreedCondition',
            fields=[
                ('breed_conditionID', models.AutoField(primary_key=True, serialize=False)),
                ('condictionMin', models.IntegerField(default=0)),
                ('conditionMax', models.IntegerField(default=0)),
                ('condition_status', models.IntegerField(default=1)),
                ('breedID', models.ForeignKey(db_column='breedID', on_delete=django.db.models.deletion.CASCADE, related_name='breed_conditions', to='breeds.breed')),
                ('condition_typeID', models.ForeignKey(db_column='condition_typeID', on_delete=django.db.models.deletion.CASCADE, related_name='breed_condition_types', to='breeds.conditiontype')),
            ],
            options={
                'verbose_name': 'Breed Condition',
                'verbose_name_plural': 'Breed Conditions',
            },
        ),
        migrations.CreateModel(
            name='BreedFeeding',
            fields=[
                ('breedFeedingID', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(default=0)),
                ('breed_feed_status', models.IntegerField(default=1)),
                ('age', models.IntegerField(default=0)),
                ('frequency', models.IntegerField(default=1)),
                ('breedID', models.ForeignKey(db_column='breedID', on_delete=django.db.models.deletion.CASCADE, related_name='breed_feeding_rules', to='breeds.breed')),
                ('foodTypeID', models.ForeignKey(db_column='foodTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='breed_feeding_types', to='breeds.foodtype')),
            ],
            options={
                'verbose_name': 'Breed Feeding',
                'verbose_name_plural': 'Breed Feedings',
            },
        ),
        migrations.CreateModel(
            name='BreedActivity',
            fields=[
                ('breedActivityID', models.AutoField(primary_key=True, serialize=False)),
                ('age', models.IntegerField(default=0)),
                ('breed_activity_status', models.IntegerField(default=1)),
                ('activityTypeID', models.ForeignKey(db_column='activityTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='breed_activity_types', to='breeds.activitytype')),
                ('breedID', models.ForeignKey(db_column='breedID', on_delete=django.db.models.deletion.CASCADE, related_name='breed_activities', to='breeds.breed')),
            ],
            options={
                'verbose_name': 'Breed Activity',
                'verbose_name_plural': 'Breed Activities',
                'unique_together': {('breedID', 'activityTypeID', 'age')},
            },
        ),
        migrations.CreateModel(
            name='BreedGrowth',
            fields=[
                ('breedGrowthID', models.AutoField(primary_key=True, serialize=False)),
                ('age', models.IntegerField(default=0)),
                ('minWeight', models.IntegerField(default=0)),
                ('breedID', models.ForeignKey(db_column='breedID', on_delete=django.db.models.deletion.CASCADE, related_name='breed_growth', to='breeds.breed')),
            ],
            options={
                'verbose_name': 'Breed Growth',
                'verbose_name_plural': 'Breed Growths',
                'unique_together': {('breedID', 'age')},
            },
        ),
        migrations.AddConstraint(
            model_name='breedcondition',
            constraint=models.CheckConstraint(check=models.Q(('condictionMin__lte', models.F('conditionMax'))), name='breed_condition_min_le_max'),
        ),
        migrations.AlterUniqueTogether(
            name='breedcondition',
            unique_together={('breedID', 'condition_typeID')},
        ),
        migrations.AlterUniqueTogether(
            name='breedfeeding',
            unique_together={('breedID', 'foodTypeID', 'age')},
        ),
    ]
